{
  "name": "TelosBooking Scraper - Corrected",
  "nodes": [
    {
      "parameters": {
        "path": "buscar-tipos",
        "options": {
          "httpMethod": "POST"
        }
      },
      "id": "ea95f9c7-1563-4d59-9cca-312d04101ded",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [680, 280],
      "webhookId": "0f6cd385-8230-4a9e-94b8-90515c6dd348"
    },
    {
      "parameters": {
        "functionCode": "// Generar búsquedas para diferentes tipos de telos\nconst intenciones = $json.intenciones || ['telo', 'albergue transitorio', 'motel'];\nconst ciudad = $json.ciudad || 'Buenos Aires';\n\nreturn intenciones.map(intencion => ({\n  json: {\n    query: `${intencion} en ${ciudad}`,\n    ciudad: ciudad,\n    tipo: intencion\n  }\n}));"
      },
      "id": "7fd14ab9-6ee1-40b5-b757-6a86d0af2554",
      "name": "Generar Búsquedas",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [880, 280]
    },
    {
      "parameters": {
        "url": "https://maps.googleapis.com/maps/api/place/textsearch/json",
        "qs": {
          "query": "={{$json.query}}",
          "key": "AIzaSyD7eth14-yHGQ-yC_34W5i8Tjg1oVRjTsI"
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "a7f8e111-458a-4229-b2eb-2fff59cf064c",
      "name": "Google Maps API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1100, 280]
    },
    {
      "parameters": {
        "functionCode": "// Procesar resultados de Google Maps\nconst items = $input.all();\nconst processedItems = [];\n\nfor (const item of items) {\n  const response = item.json;\n  \n  if (response.results && Array.isArray(response.results)) {\n    for (const place of response.results) {\n      // Filtrar solo lugares que parezcan telos/moteles\n      const name = place.name.toLowerCase();\n      const isRelevant = name.includes('telo') || \n                        name.includes('motel') || \n                        name.includes('albergue') || \n                        name.includes('hotel') ||\n                        place.types.includes('lodging');\n      \n      if (isRelevant && place.name && place.formatted_address) {\n        // Limpiar nombre de ciudad\n        let ciudadLimpia = $('Generar Búsquedas').item.json.ciudad;\n        if (place.formatted_address.includes('Corrientes')) {\n          ciudadLimpia = 'Corrientes';\n        } else if (place.formatted_address.includes('Chaco') || place.formatted_address.includes('Resistencia')) {\n          ciudadLimpia = 'Resistencia';\n        }\n        \n        // Generar slug limpio\n        const slug = place.name\n          .toLowerCase()\n          .normalize('NFD')\n          .replace(/[\\u0300-\\u036f]/g, '')\n          .replace(/[^a-z0-9\\s-]/g, '')\n          .replace(/\\s+/g, '-')\n          .replace(/-+/g, '-')\n          .trim();\n        \n        processedItems.push({\n          json: {\n            nombre: place.name.replace(/[\"']/g, ''),\n            slug: slug,\n            direccion: place.formatted_address,\n            ciudad: ciudadLimpia,\n            precio: Math.floor(Math.random() * 3000) + 2000, // Precio aleatorio entre 2000-5000\n            telefono: place.formatted_phone_number || null,\n            servicios: ['WiFi', 'Estacionamiento'], // Servicios por defecto\n            descripcion: `${place.name} ubicado en ${place.formatted_address}`,\n            rating: place.rating || (Math.random() * 2 + 3).toFixed(1),\n            imagen_url: place.photos && place.photos[0] ? \n              `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${place.photos[0].photo_reference}&key=AIzaSyD7eth14-yHGQ-yC_34W5i8Tjg1oVRjTsI` : null,\n            lat: place.geometry?.location?.lat || null,\n            lng: place.geometry?.location?.lng || null,\n            fuente: 'n8n-google-maps',\n            fecha_scraping: new Date().toISOString()\n          }\n        });\n      }\n    }\n  }\n}\n\nconsole.log(`Procesados ${processedItems.length} telos`);\nreturn processedItems;"
      },
      "id": "94e1abb3-5f3b-40d4-b430-e1a2643c06b9",
      "name": "Procesar Telos",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1320, 280]
    },
    {
      "parameters": {
        "functionCode": "// Preparar datos para TelosBooking API\nconst items = $input.all();\n\n// Extraer solo los datos JSON de cada item\nconst telosData = items.map(item => item.json);\n\nconsole.log(`Enviando ${telosData.length} telos a TelosBooking`);\n\n// Retornar como array plano (no envuelto en objeto)\nreturn [{\n  json: telosData\n}];"
      },
      "id": "prep-data-node",
      "name": "Preparar Datos",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1480, 280]
    },
    {
      "parameters": {
        "url": "https://telosbooking.vercel.app/api/n8n/webhook",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {
          "headers": {
            "Authorization": "Bearer {{ $env.N8N_WEBHOOK_TOKEN }}",
            "Content-Type": "application/json"
          },
          "response": {
            "response": {
              "neverError": true
            }
          },
          "httpMethod": "POST"
        }
      },
      "id": "7a4f1691-1457-4944-851b-6ad7d082825c",
      "name": "Enviar a TelosBooking API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [1640, 280]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Generar Búsquedas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generar Búsquedas": {
      "main": [
        [
          {
            "node": "Google Maps API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Maps API": {
      "main": [
        [
          {
            "node": "Procesar Telos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Telos": {
      "main": [
        [
          {
            "node": "Preparar Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos": {
      "main": [
        [
          {
            "node": "Enviar a TelosBooking API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  }
}
